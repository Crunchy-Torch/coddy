# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build-back:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "./back/build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      - run: cd back && gradle dependencies

      # run tests!
      - run: cd back && gradle compileJava

      - save_cache:
          paths:
            - /home/circleci/.gradle/caches/
            - /home/circleci/.gradle/wrapper/
          key: v2-dependencies-{{ checksum "./back/build.gradle" }}
  test-back:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "./back/build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      - run: cd back && gradle dependencies

      # run tests!
      - run: cd back && gradle test

      - save_cache:
          paths:
            - /home/circleci/.gradle/caches/
            - /home/circleci/.gradle/wrapper/
          key: v2-dependencies-{{ checksum "./back/build.gradle" }}

  package-back:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "./back/build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      - run: cd back && gradle dependencies
      # package the application
      - run: cd back && gradle build -x test --parallel
      # store the jar
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory
          root: ~/repo
          # Must be relative path from root
          paths:
            - back/build/

      - save_cache:
          paths:
            - /home/circleci/.gradle/caches/
            - /home/circleci/.gradle/wrapper/
          key: v2-dependencies-{{ checksum "./back/build.gradle" }}

  ###################################################
  ###              Workflow front                 ###
  ###################################################

  build-front:
    docker:
      - image: circleci/node:8.4.0
    working_directory: ~/repo

    steps:
      - checkout
      - restore_cache:
          keys:
          - dependency-cache-{{ checksum "./front/package.json" }}
          - dependency-cache-
      - run: cd ./front && npm install
      # build
      - run: cd ./front && npm run-script build-prod
      # store the jar
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory
          root: ~/repo
          # Must be relative path from root
          paths:
            - front/dist/

      - save_cache:
          key: dependency-cache-{{ checksum "./front/package.json" }}
          paths:
            - ./front/node_modules

  ###################################################
  ###              Workflow Docker                ###
  ###################################################

  build-docker:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ~/repo
      - setup_remote_docker
      - run: .circleci/build-docker.sh -b dev-master
workflows:
  version: 2
  build_and_test:
    jobs:
      - build-back
      - build-front
      - test-back:
          requires:
            - build-back
      - package-back:
          requires:
            - test-back
      - build-docker:
          requires:
            - package-back
            - build-front