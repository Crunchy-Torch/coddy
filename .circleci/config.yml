# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build-back:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "./back/build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      - run: cd back && gradle dependencies

      # run tests!
      - run: cd back && gradle compileJava

      - save_cache:
          paths:
            - /home/circleci/.gradle/caches/
            - /home/circleci/.gradle/wrapper/
          key: v2-dependencies-{{ checksum "./back/build.gradle" }}
  test-back:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "./back/build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      - run: cd back && gradle dependencies

      # run tests!
      - run: cd back && gradle test

      - save_cache:
          paths:
            - /home/circleci/.gradle/caches/
            - /home/circleci/.gradle/wrapper/
          key: v2-dependencies-{{ checksum "./back/build.gradle" }}

  sonarqube-back:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "./back/build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      - run: cd back && gradle dependencies

      # run sonarqube!
      - run: cd back && gradle sonarqube -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=crunchytorch-github -Dsonar.login=${SONARQUBE_TOKEN}

      - save_cache:
          paths:
            - /home/circleci/.gradle/caches/
            - /home/circleci/.gradle/wrapper/
          key: v2-dependencies-{{ checksum "./back/build.gradle" }}

  build-front:
    docker:
      - image: circleci/node:8.4.0
    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
          - dependency-cache-{{ checksum "./front/package.json" }}
          - dependency-cache-

      - run: cd ./front && npm install

      # build
      - run: cd ./front && npm run-script build-prod

      - save_cache:
          key: dependency-cache-{{ checksum "./front/package.json" }}
          paths:
            - ./front/node_modules

workflows:
  version: 2
  build_and_test:
    jobs:
      - build-back
      - build-front
      - test-back:
          requires:
            - build-back
      - sonarqube-back:
          requires:
            - test-back
          filters:
            branches:
              only: master