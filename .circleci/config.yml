# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build-back:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "./back/build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      - run: cd back && gradle dependencies

      # run tests!
      - run: cd back && gradle compileJava

      - save_cache:
          paths:
            - /home/circleci/.gradle/caches/
            - /home/circleci/.gradle/wrapper/
          key: v2-dependencies-{{ checksum "./back/build.gradle" }}
  test-back:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "./back/build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      - run: cd back && gradle dependencies

      # run tests!
      - run: cd back && gradle test

      # run code-coverage generation
      - run: cd back && gradle jacocoTestReport

      # push code-coverage to codecov
      - run: bash <(curl -s https://codecov.io/bash)

      - save_cache:
          paths:
            - /home/circleci/.gradle/caches/
            - /home/circleci/.gradle/wrapper/
          key: v2-dependencies-{{ checksum "./back/build.gradle" }}

  sonarqube-back:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "./back/build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      - run: cd back && gradle dependencies

      # run sonarqube!
      - run: cd back && gradle sonarqube -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=crunchytorch-github -Dsonar.login=${SONARQUBE_TOKEN} -Dsonar.branch.name=${CIRCLE_BRANCH}
      - save_cache:
          paths:
            - /home/circleci/.gradle/caches/
            - /home/circleci/.gradle/wrapper/
          key: v2-dependencies-{{ checksum "./back/build.gradle" }}
  blocker-check:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    steps:
      - checkout
      - run: .circleci/check_violations.sh blocker ${NB_BLOCKER_ISSUE}
  critical-check:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    steps:
      - checkout
      - run: .circleci/check_violations.sh critical ${NB_CRITICAL_ISSUE}
  major-check:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    steps:
      - checkout
      - run: .circleci/check_violations.sh major ${NB_MAJOR_ISSUE}
  minor-check:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    steps:
      - checkout
      - run: .circleci/check_violations.sh minor ${NB_MINOR_ISSUE}
  info-check:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    steps:
      - checkout
      - run: .circleci/check_violations.sh info ${NB_INFO_ISSUE}

  package-back:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "./back/build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      - run: cd back && gradle dependencies
      # package the application
      - run: cd back && gradle build -x test --parallel
      # store the jar
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory
          root: ~/repo
          # Must be relative path from root
          paths:
            - back/build/

      - save_cache:
          paths:
            - /home/circleci/.gradle/caches/
            - /home/circleci/.gradle/wrapper/
          key: v2-dependencies-{{ checksum "./back/build.gradle" }}

  ###################################################
  ###              Workflow front                 ###
  ###################################################

  build-front:
    docker:
      - image: circleci/node:8.4.0
    working_directory: ~/repo

    steps:
      - checkout
      - restore_cache:
          keys:
          - dependency-cache-{{ checksum "./front/package.json" }}
          - dependency-cache-
      - run: cd ./front && npm install
      # build
      - run: cd ./front && npm run-script build-prod
      # store the jar
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory
          root: ~/repo
          # Must be relative path from root
          paths:
            - front/dist/

      - save_cache:
          key: dependency-cache-{{ checksum "./front/package.json" }}
          paths:
            - ./front/node_modules
  test-front:
    docker:
      - image: circleci/node:8.4.0
    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
          - dependency-cache-{{ checksum "./front/package.json" }}
          - dependency-cache-

      - run: cd ./front && npm install

      # test
      - run: cd ./front && npm run test-ci

      # push code coverage to codecov
      - run: cd ./front && bash <(curl -s https://codecov.io/bash)

      - save_cache:
          key: dependency-cache-{{ checksum "./front/package.json" }}
          paths:
            - ./front/node_modules

  lint-front:
    docker:
      - image: circleci/node:8.4.0
    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
          - dependency-cache-{{ checksum "./front/package.json" }}
          - dependency-cache-

      - run: cd ./front && npm install

      # lint
      - run: cd ./front && npm run lint

      - save_cache:
          key: dependency-cache-{{ checksum "./front/package.json" }}
          paths:
            - ./front/node_modules

  ###################################################
  ###              Workflow Docker                ###
  ###################################################

  build-push-docker:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ~/repo
      - setup_remote_docker
      - run: .circleci/build-docker.sh --build
      - run: .circleci/build-docker.sh --connect
      - run: .circleci/build-docker.sh --push

  push-tag-docker:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - run: .circleci/build-docker.sh --connect
      - run: .circleci/build-docker.sh --clever-tag ${CIRCLE_TAG}

workflows:
  version: 2
  build_and_test:
    jobs:
      - build-back
      - test-back:
          requires:
            - build-back
      - sonarqube-back:
          requires:
            - test-back
      - blocker-check:
          requires:
            - sonarqube-back
      - critical-check:
          requires:
            - sonarqube-back
      - major-check:
          requires:
            - sonarqube-back
      - minor-check:
          requires:
            - sonarqube-back
      - info-check:
          requires:
            - sonarqube-back
      - package-back:
          requires:
            - blocker-check
            - critical-check
            - major-check
            - minor-check
            - info-check
      - build-front
      - test-front:
          requires:
            - build-front
      - lint-front:
          requires:
            - test-front
      - build-push-docker:
          requires:
            - package-back
            - lint-front
          filters:
            branches:
              only: master
      - push-tag-docker:
          requires:
            - build-push-docker
          filters:
            tags:
              only: /.*/
            branches:
              only: master